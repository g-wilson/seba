service: seba

frameworkVersion: '2'
useDotenv: true
variablesResolutionMode: 20210326

provider:
  name: aws
  runtime: go1.x
  stage: ${opt:stage,'dev'}
  lambdaHashingVersion: 20201221
  region: eu-west-1
  httpApi:
    cors: true
    disableDefaultEndpoint: true
    shouldStartNameWithService: true
  environment:
      LOG_FORMAT: json
      LOG_LEVEL: info

package:
  patterns:
    - '!./**'
    - ./bin/**

functions:
  openidconfig:
    handler: ${self:custom.monobinaryPath}
    environment:
      LAMBDA_GO_ENTRYPOINT: openidconfig
    events:
      - httpApi:
          path: /.well-known/openid-configuration
          method: get
  openidkeys:
    handler: ${self:custom.monobinaryPath}
    environment:
      LAMBDA_GO_ENTRYPOINT: openidkeys
    events:
      - httpApi:
          path: /.well-known/jwks.json
          method: get
  authenticate:
    handler: ${self:custom.monobinaryPath}
    environment:
      LAMBDA_GO_ENTRYPOINT: authenticate
      AUTH_DYNAMO_TABLE_NAME: ${self:custom.AUTH_DYNAMO_TABLE_NAME.${self:provider.stage}}
      AUTH_ISSUER: ${self:custom.AUTH_ISSUER.${self:provider.stage}}
      AUTH_PRIVATE_KEY: ${self:custom.AUTH_PRIVATE_KEY.${self:provider.stage}}
      GOOGLE_CLIENT_ID: ${self:custom.GOOGLE_CLIENT_ID.${self:provider.stage}}
    events:
      - httpApi:
          path: /2021-09-01/authenticate
          method: post
  sendemail:
    handler: ${self:custom.monobinaryPath}
    environment:
      LAMBDA_GO_ENTRYPOINT: sendemail
      AUTH_DYNAMO_TABLE_NAME: ${self:custom.AUTH_DYNAMO_TABLE_NAME.${self:provider.stage}}
      ACTUALLY_SEND_EMAILS: ${self:custom.ACTUALLY_SEND_EMAILS.${self:provider.stage}}
      EMAIL_SENDER_DOMAIN: ${self:custom.EMAIL_SENDER_DOMAIN.${self:provider.stage}}
      EMAIL_REPLY_ADDRESS: ${self:custom.EMAIL_REPLY_ADDRESS.${self:provider.stage}}
    events:
      - httpApi:
          path: /2021-09-01/send_authentication_email
          method: post
  webauthnregistrationstart:
    handler: ${self:custom.monobinaryPath}
    environment:
      LAMBDA_GO_ENTRYPOINT: webauthnregistrationstart
      AUTH_DYNAMO_TABLE_NAME: ${self:custom.AUTH_DYNAMO_TABLE_NAME.${self:provider.stage}}
      AUTH_ISSUER: ${self:custom.AUTH_ISSUER.${self:provider.stage}}
      WEBAUTHN_DISPLAY_NAME: ${self:custom.WEBAUTHN_DISPLAY_NAME.${self:provider.stage}}
      WEBAUTHN_ORIGIN: ${self:custom.WEBAUTHN_ORIGIN.${self:provider.stage}}
    events:
      - httpApi:
          path: /2021-09-01/start_webauthn_registration
          method: post
  webauthnregistrationcomplete:
    handler: ${self:custom.monobinaryPath}
    environment:
      LAMBDA_GO_ENTRYPOINT: webauthnregistrationcomplete
      AUTH_DYNAMO_TABLE_NAME: ${self:custom.AUTH_DYNAMO_TABLE_NAME.${self:provider.stage}}
      AUTH_ISSUER: ${self:custom.AUTH_ISSUER.${self:provider.stage}}
      AUTH_PRIVATE_KEY: ${self:custom.AUTH_PRIVATE_KEY.${self:provider.stage}}
      WEBAUTHN_DISPLAY_NAME: ${self:custom.WEBAUTHN_DISPLAY_NAME.${self:provider.stage}}
      WEBAUTHN_ORIGIN: ${self:custom.WEBAUTHN_ORIGIN.${self:provider.stage}}
    events:
      - httpApi:
          path: /2021-09-01/complete_webauthn_registration
          method: post
  webauthnverificationstart:
    handler: ${self:custom.monobinaryPath}
    environment:
      LAMBDA_GO_ENTRYPOINT: webauthnverificationstart
      AUTH_DYNAMO_TABLE_NAME: ${self:custom.AUTH_DYNAMO_TABLE_NAME.${self:provider.stage}}
      AUTH_ISSUER: ${self:custom.AUTH_ISSUER.${self:provider.stage}}
      WEBAUTHN_DISPLAY_NAME: ${self:custom.WEBAUTHN_DISPLAY_NAME.${self:provider.stage}}
      WEBAUTHN_ORIGIN: ${self:custom.WEBAUTHN_ORIGIN.${self:provider.stage}}
    events:
      - httpApi:
          path: /2021-09-01/start_webauthn_verification
          method: post
  webauthnverificationcomplete:
    handler: ${self:custom.monobinaryPath}
    environment:
      LAMBDA_GO_ENTRYPOINT: webauthnverificationcomplete
      AUTH_DYNAMO_TABLE_NAME: ${self:custom.AUTH_DYNAMO_TABLE_NAME.${self:provider.stage}}
      AUTH_ISSUER: ${self:custom.AUTH_ISSUER.${self:provider.stage}}
      AUTH_PRIVATE_KEY: ${self:custom.AUTH_PRIVATE_KEY.${self:provider.stage}}
      WEBAUTHN_DISPLAY_NAME: ${self:custom.WEBAUTHN_DISPLAY_NAME.${self:provider.stage}}
      WEBAUTHN_ORIGIN: ${self:custom.WEBAUTHN_ORIGIN.${self:provider.stage}}
    events:
      - httpApi:
          path: /2021-09-01/complete_webauthn_verification
          method: post

custom:
  stages:
    - dev
  monobinaryPath: "bin/service"
  AUTH_ISSUER:
    dev: ${env:AUTH_ISSUER}
  AUTH_DYNAMO_TABLE_NAME:
    dev: ${env:AUTH_DYNAMO_TABLE_NAME}
  AUTH_PRIVATE_KEY:
    dev: ${env:AUTH_PRIVATE_KEY}
    # prod: ${ssm:/seba/prod/AUTH_PRIVATE_KEY}
  ACTUALLY_SEND_EMAILS:
    dev: true
  EMAIL_SENDER_DOMAIN:
    dev: ${env:EMAIL_SENDER_DOMAIN}
  EMAIL_REPLY_ADDRESS:
    dev: ${env:EMAIL_REPLY_ADDRESS}
  GOOGLE_CLIENT_ID:
    dev: ${env:GOOGLE_CLIENT_ID}
  WEBAUTHN_DISPLAY_NAME:
    dev: ${env:WEBAUTHN_DISPLAY_NAME}
  WEBAUTHN_ORIGIN:
    dev: ${env:WEBAUTHN_ORIGIN}
